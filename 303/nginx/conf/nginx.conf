
#user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
	
	      location /ttn/webhook/ {
            # Use the hostname 'ttn_webhook' if nginx is running in a container.
            proxy_pass http://localhost:5688;
            #proxy_pass http://ttn_webhook:5688;
        }

        # Special handling for FastAPI docs URLs.
        location /broker/api/docs {
            # Use the hostname 'restapi' if nginx is running in a container.
            proxy_pass http://localhost:5687/docs;
            #proxy_pass http://restapi:5687/docs;
        }

        location /openapi.json {
            # Use the hostname 'restapi' if nginx is running in a container.
            proxy_pass http://localhost:5687/openapi.json;
            #proxy_pass http://restapi:5687/openapi.json;
        }

        # Handler for REST API calls.
        location /broker/ {
            # Use the hostname 'restapi' if nginx is running in a container.
            proxy_pass http://localhost:5687/broker/;
            #proxy_pass http://restapi:5687/broker/;
        }

        location /rabbitmq/ {
            # Use the hostname 'mq' if nginx is running in a container.
            proxy_pass http://localhost:15672/;
            #proxy_pass http://mq:15672/;
        }

        # These are for the management web app.
        location /iota {
            return 301 $scheme://$host/iota/;
        }

        location ^~ /iota/ {
            # Timeout if the real server is dead
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

            # Proxy Connection Settings
            proxy_buffers 32 4k;
            proxy_connect_timeout 240;
            proxy_headers_hash_bucket_size 128;
            proxy_headers_hash_max_size 1024;
            proxy_http_version 1.1;
            proxy_read_timeout 240;
            proxy_redirect http:// $scheme://;
            proxy_send_timeout 240;

            # Proxy Cache and Cookie Settings
            proxy_cache_bypass $cookie_session;
            proxy_no_cache $cookie_session;

            # Proxy Header Settings
            proxy_set_header Host $host;
            proxy_set_header Proxy "";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-Method $request_method;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
            proxy_set_header X-Real-IP $remote_addr;

            # Use the hostname 'webapp' if nginx is running in a container.
            set $upstream_app webapp;
            #set $upstream_app 127.0.0.1;
            set $upstream_port 5000;
            set $upstream_proto http;
            proxy_pass $upstream_proto://$upstream_app:$upstream_port;
          }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
