services:
  db:
    image: postgis/postgis:14-3.4
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ../db/init.d:/docker-entrypoint-initdb.d
      - ../db/upgrade:/upgrade
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${PGDATABASE}", "-U", "${PGUSER}" ]
      timeout: 45s
      interval: 10s
      retries: 10

  timescaledb:
    image: iota/timescaledb
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - timescaledb_env
    volumes:
      - ../db/ts_initdb.d:/docker-entrypoint-initdb.d

  mq:
    hostname: "mq"
    image: rabbitmq:3.9-management
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ../config/rabbitmq:/etc/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity || exit 1
      interval: 30s
      start_period: 30s

  restapi:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - "db"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python/restapi"
    entrypoint: [ "/home/broker/.local/bin/uvicorn", "--proxy-headers", "--host", "0.0.0.0", "--port", "5687", "RestAPI:app" ]

  website:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app:/iota
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ../src/www:/app
      - ../src/python:/iota
    entrypoint: [ "python3", "./app/main.py"]

  ttn_webhook:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - ttn
    depends_on:
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python/ttn"
    entrypoint: [ "/home/broker/.local/bin/uvicorn", "--proxy-headers", "--host", "0.0.0.0", "--port", "5688", "WebHook:app" ]

  ttn_processor:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - ttn
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python/ttn"
    entrypoint: [ "python", "AllMsgsWriter.py" ]

  ydoc:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - ydoc
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python"
    entrypoint: [ "python", "-m", "ydoc.YDOC" ]

  wombat:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    profiles: ["wombat", "frred"]
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python"
    entrypoint: [ "python", "-m", "ydoc.Wombat" ]

  lm:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python"
    entrypoint: [ "python", "-m", "logical_mapper.LogicalMapper" ]

  delivery:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - ubidots
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python"
    entrypoint: [ "python", "-m", "delivery.UbidotsWriter" ]

  pollers:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - pollers
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python"
    entrypoint: [ "python", "-m", "pollers.ICT_EagleIO" ]

  frred:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - frred
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
      - ${DATABOLT_SHARED_DIR}/nectar_raw_data:/raw_data
    working_dir: "/home/broker/python"
    entrypoint: [ "python", "-m", "delivery.FRRED" ]

  tswriter:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python"
    entrypoint: [ "python", "-m", "delivery.TimescaleDB" ]

  axistech:
    image: iota/python-base
    logging:
      driver: local
      options:
        max-file: "3"
    restart: unless-stopped
    env_file:
      - .env
    profiles:
      - frred
    depends_on:
      db:
        condition: "service_healthy"
      mq:
        condition: "service_healthy"
    volumes:
      - ../src/python:/home/broker/python
    working_dir: "/home/broker/python"
    entrypoint: [ "python", "-m", "pollers.axistech" ]
